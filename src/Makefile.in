SHELL=/bin/sh
.SUFFIXES:
.SUFFIXES: .c .o .pl .pm .pod .html .man

CC	= @CC@
CPP	= @CPP@
LEX	= @LEX@
PERL	= @PERL@
YACC	= @YACC@
PERL	= @PERL@
INSTALL	= @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
MKDIR = @top_srcdir@/mkinstalldirs

RM = rm -f

CFLAGS	= -Wall -Werror @CFLAGS@ \
	-DDEFAULT_CONFIGFILE="\"@sg_config@\"" \
	-DEFAULT_LOGDIR="\"@sg_logdir@\"" \
	-DDEFAULT_DBHOME="\"@sg_dbhome@\"" \
	-Wall 

CPPFLAGS= @CPPFLAGS@
LDFLAGS	= @LDFLAGS@
LIBS	= @LIBS@
DEFS	= @DEFS@

INCLUDES= -I.. -I. -I$(srcdir)

COMPILE = echo "CC $< ..." ; $(CC) $(INCLUDES) $(CPPFLAGS) $(DEFS) $(CFLAGS)
LINK    = echo "LD $@ ..." ; $(CC) $(LDFLAGS) -o $@

top_srcdir = @top_srcdir@
srcdir     = @srcdir@
VPATH      = @srcdir@

prefix	= @prefix@
exec_prefix = @exec_prefix@
bindir	= $(exec_prefix)/bin
logdir	= @sg_logdir@
cfgdir	= @sg_cfgdir@
infodir	= $(prefix)/info

OBJS = \
	main.o \
	sgLog.o \
	sgDb.o \
	HTParse.o \
	sgDiv.o \
	sgMemory.o \
	sgGroup.o \
	sgNetGroup.o \
	sgTime.o \
	y.tab.o \
	lex.yy.o

all::
	@echo making $@ in `basename \`pwd\``

all::	squidGuard
	@echo making $? in `basename \`pwd\``

squidGuard:	$(OBJS)
	@$(LINK) $(OBJS) $(LIBS)

conf: y.tab.o lex.yy.o
	@$(COMPILE) -o conf y.tab.o lex.yy.o

main.o:	main.c sg.h config.h
	@$(COMPILE) -c main.c

sgLog.o:	sgLog.c sg.h config.h
	@$(COMPILE) -c sgLog.c

HTParse.o:	HTParse.c HTEscape.h
	@$(COMPILE) -c HTParse.c

sgDiv.o: sgDiv.c sg.h sgEx.h config.h
	@$(COMPILE) -c sgDiv.c

sgMemory.o: sgMemory.c sg.h sgEx.h config.h
	@$(COMPILE) -c sgMemory.c

sgDb.o:	sgDb.c sg.h config.h
	@$(COMPILE) -c sgDb.c

sgGroup.o:	sgGroup.c sg.h config.h
	@$(COMPILE) -c sgGroup.c

sgNetGroup.o:	sgNetGroup.c sg.h config.h
	@$(COMPILE) -c sgNetGroup.c

sgNetTime.o:	sgTime.c sg.h config.h
	@$(COMPILE) -c sgTime.c

lex.yy.o: lex.yy.c y.tab.h sg.h config.h
	@$(COMPILE) -c lex.yy.c

y.tab.o: y.tab.c y.tab.h sg.h sgEx.h config.h
	@$(COMPILE) -c y.tab.c

lex.yy.c: sg.l sg.h config.h
	$(LEX) sg.l

y.tab.c y.tab.h: sg.y sg.h config.h
	$(YACC) -d sg.y

#
# Dependencies for installing
#

install::	 install.bin
	@echo making $@ in `basename \`pwd\``

uninstall::	 uninstall.bin
	@echo making $@ in `basename \`pwd\``

install.bin:: squidGuard
	@echo making $@ in `basename \`pwd\``
	@$(MKDIR) $(bindir) $(logdir) $(cfgdir)
	$(INSTALL_PROGRAM) squidGuard $(bindir)/squidGuard

uninstall.bin::
	@echo making $@ in `basename \`pwd\``
	$(RM) $(bindir)/squidGuard

update::
	@echo making $@ in `basename \`pwd\``

update::lex.yy.c.flex y.tab.c.bison y.tab.h.bison

#
# Dependencies for cleanup
#

clean::
	@echo making $@ in `basename \`pwd\``
	$(RM) *~ *.bak core *.log *.error
	$(RM) *.o y.tab.c y.tab.h squidGuard lex.yy.c

realclean:: clean
	@echo making $@ in `basename \`pwd\``
	$(RM) TAGS *.orig

distclean:: realclean
	@echo making $@ in `basename \`pwd\``
	$(RM) Makefile sg.h config.h

#
# Dependencies for maintenance
#


subdir = src

Makefile: Makefile.in ../config.status
	cd .. && CONFIG_FILES=$(subdir)/$@ CONFIG_HEADERS= ./config.status
